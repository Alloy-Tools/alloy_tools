name: Rust CI

on:
  push:
    branches: [ "main", "CI" ]
  pull_request:
    branches: [ "main", "CI" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-native:
    name: 'Native ${{ matrix.platform.os }} Test - Target: ${{ matrix.platform.target }} - Features: ${{ matrix.features }}'
    continue-on-error: true
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          - { os: windows-latest, target: x86_64-pc-windows-msvc }
          - { os: macos-latest, target: x86_64-apple-darwin }
        features: &feature-matrix
          [ "none", "serde", "json", "binary", "json, binary", "test-utils" ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Update rustup
      run: rustup update
      
    - name: Update cargo
      run: cargo update
      
    - name: Add target
      run: rustup target add ${{ matrix.platform.target }}

    - name: Cache files
      uses: Swatinem/rust-cache@v2
      
    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --features ${{ matrix.features }} --no-default-features --target ${{ matrix.platform.target }}

#  test-wasm:
#    name: 'WASM ${{ matrix.os }} Test - Target: ${{ matrix.target }} - Features: ${{ matrix.features }}'
#    continue-on-error: true
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ ubuntu-latest ]
#        target: [ wasm32-unknown-unknown ]
#        browser: [--chrome, --firefox]
#        features: *feature-matrix
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v4
#
#    - name: Update rustup
#      run: rustup update
#      
#    - name: Update cargo
#      run: cargo update
#
#    - name: Install wasm-pack
#      uses: jetli/wasm-pack-action@v0.4.0
#      with:
#        version: 'latest'
#      
#    - name: Add WASM target
#      run: rustup target add ${{ matrix.target }}
#
#    - name: Cache files
#      uses: Swatinem/rust-cache@v2
#      
#    - name: Build
#      run: cargo build --verbose
#
#    - name: Run tests
#      run: wasm-pack test --headless ${{ matrix.browser }} --features ${{ matrix.features }} --no-default-features